// Generated by purs version 0.13.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Coroutine = require("../Control.Coroutine/index.js");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Emit = (function () {
    function Emit(value0) {
        this.value0 = value0;
    };
    Emit.create = function (value0) {
        return new Emit(value0);
    };
    return Emit;
})();
var Finish = (function () {
    function Finish(value0) {
        this.value0 = value0;
    };
    Finish.create = function (value0) {
        return new Finish(value0);
    };
    return Finish;
})();
var Emitter = function (x) {
    return x;
};
var produceAff = function (recv) {
    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Effect_Aff.monadAff)(Effect_Aff_AVar.empty))(function (v) {
        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Effect_Aff.monadAff)(Effect_Aff.forkAff(recv(Data_Function.flip(Effect_Aff_AVar.put)(v)))))(function (v2) {
            return Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.mapFlipped(Effect_Aff.functorAff)(Effect_Aff_AVar.take(v))(function (v3) {
                if (v3 instanceof Emit) {
                    return new Data_Either.Left(v3.value0);
                };
                if (v3 instanceof Finish) {
                    return new Data_Either.Right(v3.value0);
                };
                throw new Error("Failed pattern match at Control.Coroutine.Aff (line 77, column 30 - line 79, column 24): " + [ v3.constructor.name ]);
            }));
        });
    });
};
var produce = function (recv) {
    return produceAff(function (v) {
        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(recv((function () {
            var $17 = Data_Functor["void"](Effect.functorEffect);
            var $18 = Effect_Aff.runAff(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)));
            return function ($19) {
                return $17($18(v($19)));
            };
        })()));
    });
};
var produce$prime = function (dictMonadAff) {
    var $20 = Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0())(Effect_Aff_Class.liftAff(dictMonadAff));
    return function ($21) {
        return $20(produce($21));
    };
};
var newtypeEmitter = new Data_Newtype.Newtype(function (n) {
    return n;
}, Emitter);
var emit = function (v) {
    return function ($22) {
        return v(Emit.create($22));
    };
};
var close = function (v) {
    return function ($23) {
        return v(Finish.create($23));
    };
};
module.exports = {
    Emitter: Emitter,
    Emit: Emit,
    Finish: Finish,
    emit: emit,
    close: close,
    produce: produce,
    "produce'": produce$prime,
    produceAff: produceAff,
    newtypeEmitter: newtypeEmitter
};
