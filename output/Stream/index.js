// Generated by purs version 0.13.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Parallel = require("../Control.Parallel/index.js");
var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Emit = (function () {
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    return Emit;
})();
var ParStream = function (x) {
    return x;
};
var newtypeParStream = new Data_Newtype.Newtype(function (n) {
    return n;
}, ParStream);
var functorEmit = new Data_Functor.Functor(function (f) {
    return function (m) {
        return new Emit(m.value0, f(m.value1));
    };
});
var emit = function (dictMonad) {
    return function (o) {
        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
    };
};
var filter = function (dictMonadRec) {
    return function (f) {
        return function (s) {
            var go = function (strm) {
                return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(strm)))(function (v) {
                    if (v instanceof Data_Either.Left) {
                        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Done(v.value0));
                    };
                    if (v instanceof Data_Either.Right) {
                        var $93 = f(v.value0.value0);
                        if ($93) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value0.value0))(function () {
                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop(v.value0.value1));
                            });
                        };
                        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop(v.value0.value1));
                    };
                    throw new Error("Failed pattern match at Stream (line 211, column 11 - line 218, column 29): " + [ v.constructor.name ]);
                });
            };
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(go)(s);
        };
    };
};
var map = function (dictMonadRec) {
    return function (f) {
        return function (s) {
            var go = function (strm) {
                return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(strm)))(function (v) {
                    if (v instanceof Data_Either.Left) {
                        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Done(v.value0));
                    };
                    if (v instanceof Data_Either.Right) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(f(v.value0.value0)))(function () {
                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop(v.value0.value1));
                        });
                    };
                    throw new Error("Failed pattern match at Stream (line 225, column 11 - line 229, column 27): " + [ v.constructor.name ]);
                });
            };
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(go)(s);
        };
    };
};
var functorParStream = function (dictMonadRec) {
    return new Data_Functor.Functor(function (f) {
        var $251 = Data_Newtype.wrap(newtypeParStream);
        var $252 = map(dictMonadRec)(f);
        var $253 = Data_Newtype.unwrap(newtypeParStream);
        return function ($254) {
            return $251($252($253($254)));
        };
    });
};
var merge2 = function (dictAlternative) {
    return function (dictMonadRec) {
        return function (dictParallel) {
            return function (dictSemigroup) {
                return function (sa) {
                    return function (sb) {
                        var go = function (a) {
                            return function (b) {
                                return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Parallel.parOneOf(dictParallel)(dictAlternative)(Data_Foldable.foldableArray)(Data_Functor.functorArray)([ Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(a)), Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(b)) ])))(function (v) {
                                    if (v instanceof Data_Either.Left && v.value0 instanceof Data_Either.Left) {
                                        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(b)(function (v1) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictSemigroup)(v.value0.value0)(v1)));
                                        });
                                    };
                                    if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
                                        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(a)(function (v1) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictSemigroup)(v.value0.value0)(v1)));
                                        });
                                    };
                                    if (v instanceof Data_Either.Left && v.value0 instanceof Data_Either.Right) {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value0.value0.value0))(function () {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                a: v.value0.value0.value1,
                                                b: b
                                            }));
                                        });
                                    };
                                    if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value0.value0.value0))(function () {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                a: a,
                                                b: v.value0.value0.value1
                                            }));
                                        });
                                    };
                                    throw new Error("Failed pattern match at Stream (line 49, column 11 - line 61, column 37): " + [ v.constructor.name ]);
                                });
                            };
                        };
                        return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(go)(sa)(sb);
                    };
                };
            };
        };
    };
};
var flatMap = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (dictParallel) {
            return function (dictMonoid) {
                return function (s) {
                    return function (f) {
                        var go = function (a) {
                            return function (b) {
                                return function (r) {
                                    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Parallel.parOneOf(dictParallel)(dictAlternative)(Data_Foldable.foldableArray)(Data_Functor.functorArray)([ Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(a)), Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(b)) ])))(function (v) {
                                        if (v instanceof Data_Either.Left && v.value0 instanceof Data_Either.Left) {
                                            return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(b)(function (v1) {
                                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictMonoid.Semigroup0())(r)(Data_Semigroup.append(dictMonoid.Semigroup0())(v.value0.value0)(v1))));
                                            });
                                        };
                                        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
                                            return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(a)))(function (v1) {
                                                if (v1 instanceof Data_Either.Left) {
                                                    return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictMonoid.Semigroup0())(r)(Data_Semigroup.append(dictMonoid.Semigroup0())(v.value0.value0)(v1.value0))));
                                                };
                                                if (v1 instanceof Data_Either.Right) {
                                                    return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                        a: v1.value0.value1,
                                                        b: f(v1.value0.value0),
                                                        c: Data_Semigroup.append(dictMonoid.Semigroup0())(r)(v.value0.value0)
                                                    }));
                                                };
                                                throw new Error("Failed pattern match at Stream (line 98, column 19 - line 100, column 83): " + [ v1.constructor.name ]);
                                            });
                                        };
                                        if (v instanceof Data_Either.Left && v.value0 instanceof Data_Either.Right) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                a: v.value0.value0.value1,
                                                b: merge2(dictAlternative)(dictMonadRec)(dictParallel)(dictMonoid.Semigroup0())(b)(f(v.value0.value0.value0)),
                                                c: r
                                            }));
                                        };
                                        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value0.value0.value0))(function () {
                                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                    a: a,
                                                    b: v.value0.value0.value1,
                                                    c: r
                                                }));
                                            });
                                        };
                                        throw new Error("Failed pattern match at Stream (line 92, column 11 - line 105, column 43): " + [ v.constructor.name ]);
                                    });
                                };
                            };
                        };
                        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(s)))(function (v) {
                            if (v instanceof Data_Either.Left) {
                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(v.value0);
                            };
                            if (v instanceof Data_Either.Right) {
                                return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(go)(v.value0.value1)(f(v.value0.value0))(Data_Monoid.mempty(dictMonoid));
                            };
                            throw new Error("Failed pattern match at Stream (line 85, column 9 - line 88, column 39): " + [ v.constructor.name ]);
                        });
                    };
                };
            };
        };
    };
};
var flatMap$prime = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (dictParallel) {
            return function (dictMonoid) {
                return function (s) {
                    return function (f) {
                        var go = function (a) {
                            return function (b) {
                                return function (r) {
                                    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_Tuple.Tuple.create)(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(a))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(b))))))(function (v) {
                                        if (v.value0 instanceof Data_Either.Right && v.value1 instanceof Data_Either.Right) {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value1.value0.value0))(function () {
                                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                    a: v.value0.value0.value1,
                                                    b: merge2(dictAlternative)(dictMonadRec)(dictParallel)(dictMonoid.Semigroup0())(f(v.value0.value0.value0))(v.value1.value0.value1),
                                                    c: r
                                                }));
                                            });
                                        };
                                        if (v.value0 instanceof Data_Either.Left && v.value1 instanceof Data_Either.Right) {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value1.value0.value0))(function () {
                                                return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(v.value1.value0.value1)(function (v1) {
                                                    return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictMonoid.Semigroup0())(r)(Data_Semigroup.append(dictMonoid.Semigroup0())(v.value0.value0)(v1))));
                                                });
                                            });
                                        };
                                        if (v.value0 instanceof Data_Either.Right && v.value1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                a: v.value0.value0.value1,
                                                b: f(v.value0.value0.value0),
                                                c: Data_Semigroup.append(dictMonoid.Semigroup0())(r)(v.value1.value0)
                                            }));
                                        };
                                        if (v.value0 instanceof Data_Either.Left && v.value1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictMonoid.Semigroup0())(r)(Data_Semigroup.append(dictMonoid.Semigroup0())(v.value0.value0)(v.value1.value0))));
                                        };
                                        throw new Error("Failed pattern match at Stream (line 125, column 11 - line 135, column 69): " + [ v.constructor.name ]);
                                    });
                                };
                            };
                        };
                        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(s)))(function (v) {
                            if (v instanceof Data_Either.Left) {
                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(v.value0);
                            };
                            if (v instanceof Data_Either.Right) {
                                return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(go)(v.value0.value1)(f(v.value0.value0))(Data_Monoid.mempty(dictMonoid));
                            };
                            throw new Error("Failed pattern match at Stream (line 118, column 9 - line 121, column 39): " + [ v.constructor.name ]);
                        });
                    };
                };
            };
        };
    };
};
var merge = function (dictAlternative) {
    return function (dictMonadRec) {
        return function (dictParallel) {
            return function (dictFoldable) {
                return function (dictMonoid) {
                    return function (streams) {
                        return Data_Foldable.foldl(dictFoldable)(merge2(dictAlternative)(dictMonadRec)(dictParallel)(dictMonoid.Semigroup0()))(Data_Monoid.mempty(Control_Monad_Free_Trans.monoidFreeT(functorEmit)(dictMonadRec.Monad0())(dictMonoid)))(streams);
                    };
                };
            };
        };
    };
};
var semigroupStream = function (dictMonadRec) {
    return function (dictParallel) {
        return function (dictAlternative) {
            return function (dictSemigroup) {
                return new Data_Semigroup.Semigroup(function (a) {
                    return function (b) {
                        return Data_Newtype.wrap(newtypeParStream)(merge2(dictAlternative)(dictMonadRec)(dictParallel)(dictSemigroup)(Data_Newtype.unwrap(newtypeParStream)(a))(Data_Newtype.unwrap(newtypeParStream)(b)));
                    };
                });
            };
        };
    };
};
var monoidStream = function (dictMonadRec) {
    return function (dictParallel) {
        return function (dictAlternative) {
            return function (dictMonoid) {
                return new Data_Monoid.Monoid(function () {
                    return semigroupStream(dictMonadRec)(dictParallel)(dictAlternative)(dictMonoid.Semigroup0());
                }, Data_Newtype.wrap(newtypeParStream)(Data_Monoid.mempty(Control_Monad_Free_Trans.monoidFreeT(functorEmit)(dictMonadRec.Monad0())(dictMonoid))));
            };
        };
    };
};
var switchMap = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (dictParallel) {
            return function (dictMonoid) {
                return function (s) {
                    return function (f) {
                        var go = function (a) {
                            return function (b) {
                                return function (r) {
                                    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Parallel.parOneOf(dictParallel)(dictAlternative)(Data_Foldable.foldableArray)(Data_Functor.functorArray)([ Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(a)), Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(b)) ])))(function (v) {
                                        if (v instanceof Data_Either.Left && v.value0 instanceof Data_Either.Left) {
                                            return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(b)(function (v1) {
                                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictMonoid.Semigroup0())(r)(Data_Semigroup.append(dictMonoid.Semigroup0())(v.value0.value0)(v1))));
                                            });
                                        };
                                        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
                                            return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(a)))(function (v1) {
                                                if (v1 instanceof Data_Either.Left) {
                                                    return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictMonoid.Semigroup0())(r)(Data_Semigroup.append(dictMonoid.Semigroup0())(v.value0.value0)(v1.value0))));
                                                };
                                                if (v1 instanceof Data_Either.Right) {
                                                    return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                        a: v1.value0.value1,
                                                        b: f(v1.value0.value0),
                                                        c: Data_Semigroup.append(dictMonoid.Semigroup0())(r)(v.value0.value0)
                                                    }));
                                                };
                                                throw new Error("Failed pattern match at Stream (line 168, column 19 - line 170, column 83): " + [ v1.constructor.name ]);
                                            });
                                        };
                                        if (v instanceof Data_Either.Left && v.value0 instanceof Data_Either.Right) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                a: v.value0.value0.value1,
                                                b: f(v.value0.value0.value0),
                                                c: r
                                            }));
                                        };
                                        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value0.value0.value0))(function () {
                                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                    a: a,
                                                    b: v.value0.value0.value1,
                                                    c: r
                                                }));
                                            });
                                        };
                                        throw new Error("Failed pattern match at Stream (line 162, column 11 - line 174, column 43): " + [ v.constructor.name ]);
                                    });
                                };
                            };
                        };
                        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(s)))(function (v) {
                            if (v instanceof Data_Either.Left) {
                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(v.value0);
                            };
                            if (v instanceof Data_Either.Right) {
                                return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(go)(v.value0.value1)(f(v.value0.value0))(Data_Monoid.mempty(dictMonoid));
                            };
                            throw new Error("Failed pattern match at Stream (line 156, column 9 - line 158, column 58): " + [ v.constructor.name ]);
                        });
                    };
                };
            };
        };
    };
};
var switchMap$prime = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (dictParallel) {
            return function (dictMonoid) {
                return function (s) {
                    return function (f) {
                        var go = function (a) {
                            return function (b) {
                                return function (r) {
                                    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_Tuple.Tuple.create)(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(a))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(b))))))(function (v) {
                                        if (v.value0 instanceof Data_Either.Right && v.value1 instanceof Data_Either.Right) {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value1.value0.value0))(function () {
                                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                    a: v.value0.value0.value1,
                                                    b: f(v.value0.value0.value0),
                                                    c: r
                                                }));
                                            });
                                        };
                                        if (v.value0 instanceof Data_Either.Left && v.value1 instanceof Data_Either.Right) {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(v.value1.value0.value0))(function () {
                                                return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(v.value1.value0.value1)(function (v1) {
                                                    return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictMonoid.Semigroup0())(r)(Data_Semigroup.append(dictMonoid.Semigroup0())(v.value0.value0)(v1))));
                                                });
                                            });
                                        };
                                        if (v.value0 instanceof Data_Either.Right && v.value1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                a: v.value0.value0.value1,
                                                b: f(v.value0.value0.value0),
                                                c: Data_Semigroup.append(dictMonoid.Semigroup0())(r)(v.value1.value0)
                                            }));
                                        };
                                        if (v.value0 instanceof Data_Either.Left && v.value1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictMonoid.Semigroup0())(r)(Data_Semigroup.append(dictMonoid.Semigroup0())(v.value0.value0)(v.value1.value0))));
                                        };
                                        throw new Error("Failed pattern match at Stream (line 194, column 11 - line 204, column 69): " + [ v.constructor.name ]);
                                    });
                                };
                            };
                        };
                        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(s)))(function (v) {
                            if (v instanceof Data_Either.Left) {
                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(v.value0);
                            };
                            if (v instanceof Data_Either.Right) {
                                return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(go)(v.value0.value1)(f(v.value0.value0))(Data_Monoid.mempty(dictMonoid));
                            };
                            throw new Error("Failed pattern match at Stream (line 187, column 9 - line 190, column 39): " + [ v.constructor.name ]);
                        });
                    };
                };
            };
        };
    };
};
var consume = function (dictMonadRec) {
    return function (consumer) {
        return function (stream) {
            return Control_Monad_Free_Trans.runFreeT(functorEmit)(dictMonadRec)(function (v) {
                return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadRec.Monad0()).Bind1())(consumer(v.value0))(function () {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value1);
                });
            })(stream);
        };
    };
};
var consumePar = function (dictMonadRec) {
    return function (f) {
        var $255 = consume(dictMonadRec)(f);
        var $256 = Data_Newtype.unwrap(newtypeParStream);
        return function ($257) {
            return $255($256($257));
        };
    };
};
var concatMap = function (dictMonad) {
    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad));
};
var combineLatest = function (dictAlternative) {
    return function (dictMonadRec) {
        return function (dictParallel) {
            return function (dictSemigroup) {
                return function (f) {
                    return function (s1) {
                        return function (s2) {
                            var go = function (a) {
                                return function (b) {
                                    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonadRec.Monad0())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_Tuple.Tuple.create)(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(a))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(functorEmit)(dictMonadRec)(b))))))(function (v) {
                                        if (v.value0 instanceof Data_Either.Right && v.value1 instanceof Data_Either.Right) {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(f(v.value0.value0.value0)(v.value1.value0.value0)))(function () {
                                                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Loop({
                                                    a: v.value0.value0.value1,
                                                    b: v.value1.value0.value1
                                                }));
                                            });
                                        };
                                        if (v.value0 instanceof Data_Either.Left && v.value1 instanceof Data_Either.Right) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Done(v.value0.value0));
                                        };
                                        if (v.value0 instanceof Data_Either.Left && v.value1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(Control_Monad_Rec_Class.Done.create(Data_Semigroup.append(dictSemigroup)(v.value0.value0)(v.value1.value0)));
                                        };
                                        if (v.value0 instanceof Data_Either.Right && v.value1 instanceof Data_Either.Left) {
                                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonadRec.Monad0()))(new Control_Monad_Rec_Class.Done(v.value1.value0));
                                        };
                                        throw new Error("Failed pattern match at Stream (line 245, column 11 - line 251, column 52): " + [ v.constructor.name ]);
                                    });
                                };
                            };
                            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(go)(s1)(s2);
                        };
                    };
                };
            };
        };
    };
};
var monadStream = function (dictMonadRec) {
    return function (dictParallel) {
        return function (dictAlternative) {
            return function (dictMonoid) {
                return new Control_Monad.Monad(function () {
                    return applicativeStream(dictMonadRec)(dictParallel)(dictAlternative)(dictMonoid);
                }, function () {
                    return bindStream(dictMonadRec)(dictParallel)(dictAlternative)(dictMonoid);
                });
            };
        };
    };
};
var bindStream = function (dictMonadRec) {
    return function (dictParallel) {
        return function (dictAlternative) {
            return function (dictMonoid) {
                return new Control_Bind.Bind(function () {
                    return applyParStream(dictMonadRec)(dictParallel)(dictAlternative)(dictMonoid);
                }, function (s) {
                    return function (f) {
                        return Data_Newtype.wrap(newtypeParStream)(flatMap(dictMonadRec)(dictAlternative)(dictParallel)(dictMonoid)(Data_Newtype.unwrap(newtypeParStream)(s))((function () {
                            var $258 = Data_Newtype.unwrap(newtypeParStream);
                            return function ($259) {
                                return $258(f($259));
                            };
                        })()));
                    };
                });
            };
        };
    };
};
var applyParStream = function (dictMonadRec) {
    return function (dictParallel) {
        return function (dictAlternative) {
            return function (dictMonoid) {
                return new Control_Apply.Apply(function () {
                    return functorParStream(dictMonadRec);
                }, Control_Monad.ap(monadStream(dictMonadRec)(dictParallel)(dictAlternative)(dictMonoid)));
            };
        };
    };
};
var applicativeStream = function (dictMonadRec) {
    return function (dictParallel) {
        return function (dictAlternative) {
            return function (dictMonoid) {
                return new Control_Applicative.Applicative(function () {
                    return applyParStream(dictMonadRec)(dictParallel)(dictAlternative)(dictMonoid);
                }, function (a) {
                    return Data_Newtype.wrap(newtypeParStream)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(functorEmit)(dictMonadRec.Monad0()))(emit(dictMonadRec.Monad0())(a)));
                });
            };
        };
    };
};
module.exports = {
    Emit: Emit,
    consume: consume,
    emit: emit,
    merge2: merge2,
    merge: merge,
    flatMap: flatMap,
    "flatMap'": flatMap$prime,
    concatMap: concatMap,
    switchMap: switchMap,
    "switchMap'": switchMap$prime,
    filter: filter,
    map: map,
    combineLatest: combineLatest,
    ParStream: ParStream,
    consumePar: consumePar,
    functorEmit: functorEmit,
    newtypeParStream: newtypeParStream,
    functorParStream: functorParStream,
    applyParStream: applyParStream,
    applicativeStream: applicativeStream,
    bindStream: bindStream,
    monadStream: monadStream,
    semigroupStream: semigroupStream,
    monoidStream: monoidStream
};
