// Generated by purs version 0.13.5
"use strict";
var AStar = require("../AStar/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Coroutine = require("../Control.Coroutine/index.js");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans/index.js");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List_NonEmpty = require("../Data.List.NonEmpty/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Set = require("../Data.Set/index.js");
var Draw = require("../Draw/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Event_MouseEvent = require("../Event.MouseEvent/index.js");
var UI = require("../UI/index.js");
var Web_DOM_Element = require("../Web.DOM.Element/index.js");
var Drawing = (function () {
    function Drawing() {

    };
    Drawing.value = new Drawing();
    return Drawing;
})();
var Erasing = (function () {
    function Erasing() {

    };
    Erasing.value = new Erasing();
    return Erasing;
})();
var Moving = (function () {
    function Moving() {

    };
    Moving.value = new Moving();
    return Moving;
})();
var startUI = function (consumer) {
    var $105 = Control_Monad_State_Trans.runStateT(Control_Coroutine.runProcess(Control_Monad_State_Trans.monadRecStateT(Effect_Aff.monadRecAff))(Control_Coroutine.pullFrom(Control_Monad_State_Trans.monadRecStateT(Effect_Aff.monadRecAff))(consumer)(UI.producer(Effect_Aff_Class.monadAffState(Effect_Aff_Class.monadAffAff)))));
    return function ($106) {
        return Effect_Aff.launchAff_($105($106));
    };
};
var makeDrawProcess = function (v) {
    return function (output) {
        var waitUntil = function (n) {
            if (n > 0) {
                return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (v1) {
                    return waitUntil(n - 1 | 0);
                });
            };
            if (Data_Boolean.otherwise) {
                return Control_Coroutine["await"](Effect_Aff.monadAff);
            };
            throw new Error("Failed pattern match at Main (line 78, column 5 - line 78, column 55): " + [ n.constructor.name ]);
        };
        var producer = AStar.astar(Effect_Aff_Class.monadAffAff)(v.params);
        var consumeOnce = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(waitUntil(v.iteration + 1 | 0))(function (v1) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorAwait)(Effect_Aff.functorAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Draw.drawAStar({
                params: v.params,
                world: v.world,
                toDraw: new Data_Either.Left(v1)
            })))))(function () {
                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Maybe.Nothing.value);
            });
        });
        var consumeForever = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorAwait)(Effect_Aff.functorAff))(waitUntil(v.iteration)))(function () {
            return Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (v1) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorAwait)(Effect_Aff.functorAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Draw.drawAStar({
                    params: v.params,
                    world: v.world,
                    toDraw: new Data_Either.Left(v1)
                })))))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Aff.delay(v.ms)))(function () {
                        return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorAwait)(Effect_Aff.functorAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify(function (v2) {
                            return v2 + 1 | 0;
                        })(output))));
                    });
                });
            }));
        });
        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Draw.drawAStar({
            params: v.params,
            world: v.world,
            toDraw: new Data_Either.Right(Data_Maybe.Nothing.value)
        }))))(function () {
            return Control_Bind.bind(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)((function () {
                if (v.loop) {
                    return consumeForever;
                };
                return consumeOnce;
            })())(producer)))(function (v1) {
                return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.isJust(v1))(Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Draw.drawAStar({
                    params: v.params,
                    world: v.world,
                    toDraw: new Data_Either.Right(v1)
                }))));
            });
        });
    };
};
var spawnDrawProcess = function (input) {
    return function __do() {
        var v = Effect_Ref["new"](input.iteration)();
        var v1 = Effect_Aff.launchAff(makeDrawProcess(input)(v))();
        return {
            fiber: v1,
            input: input,
            output: v
        };
    };
};
var makeConsumer = function (dictMonadAff) {
    return function (changeState) {
        return Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorAwait)((dictMonadAff.MonadEffect0()).Monad0()))(Control_Bind.bindFlipped(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)((dictMonadAff.MonadEffect0()).Monad0()))((function () {
            var $107 = Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))((dictMonadAff.MonadEffect0()).Monad0());
            return function ($108) {
                return $107(changeState($108));
            };
        })())(Control_Coroutine["await"]((dictMonadAff.MonadEffect0()).Monad0())));
    };
};
var killProcess = function (process) {
    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.killFiber(Effect_Exception.error("Error killing fiber"))(process.fiber))(function () {
        return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(process.output));
    });
};
var modifydrawProcess = function (modifyInput) {
    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function (v) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(killProcess(v.drawProcess)))(function (v1) {
            return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(spawnDrawProcess((function () {
                var v2 = modifyInput(v.drawProcess.input);
                return {
                    iteration: v1,
                    world: v2.world,
                    params: v2.params,
                    loop: v2.loop,
                    ms: v2.ms
                };
            })()))))(function (v2) {
                return Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Effect_Aff.functorAff))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff))(function (v3) {
                    var $52 = {};
                    for (var $53 in v3) {
                        if ({}.hasOwnProperty.call(v3, $53)) {
                            $52[$53] = v3[$53];
                        };
                    };
                    $52.drawProcess = v2;
                    return $52;
                }));
            });
        });
    });
};
var transformWorld = function (mouseEvent) {
    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function (v) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Draw.inverseViewScale(Event_MouseEvent.movementCoordinates(mouseEvent)))))(function (v1) {
            var transformedWorld = {
                m31: v.drawProcess.input.world.m31 + v1.x,
                m32: v.drawProcess.input.world.m32 + v1.y,
                m11: v.drawProcess.input.world.m11,
                m12: v.drawProcess.input.world.m12,
                m21: v.drawProcess.input.world.m21,
                m22: v.drawProcess.input.world.m22
            };
            return modifydrawProcess(function (v2) {
                return {
                    iteration: v2.iteration,
                    world: transformedWorld,
                    params: v2.params,
                    loop: v2.loop,
                    ms: v2.ms
                };
            });
        });
    });
};
var handlePlay = function (v) {
    return function (event) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff))(function (state) {
            var $61 = {};
            for (var $62 in state) {
                if ({}.hasOwnProperty.call(state, $62)) {
                    $61[$62] = state[$62];
                };
            };
            $61.playing = !state.playing;
            return $61;
        }))(function (v1) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Effect_Class.liftEffect(Control_Monad_State_Trans.monadEffectState(Effect_Aff.monadEffectAff))(Web_DOM_Element.setClassName((function () {
                if (v1.playing) {
                    return "pause";
                };
                return "play";
            })())(v.play)))(function () {
                return modifydrawProcess(function (v2) {
                    return {
                        iteration: v2.iteration,
                        world: v2.world,
                        params: v2.params,
                        loop: v1.playing,
                        ms: v2.ms
                    };
                });
            });
        });
    };
};
var changeMap = function (mouseEvent) {
    return function (modifyMap) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function (v) {
            return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Draw.inverseView(Event_MouseEvent.clientCoordinates(mouseEvent)))))(function (v1) {
                var tile = new AStar.Tile(Data_Int.floor(v1.x - v.drawProcess.input.world.m31), Data_Int.floor(v1.y - v.drawProcess.input.world.m32));
                var map = modifyMap(tile)(v.drawProcess.input.params.map);
                return modifydrawProcess(function (v2) {
                    return {
                        iteration: v2.iteration,
                        world: v2.world,
                        params: {
                            map: map,
                            startTile: v2.params.startTile,
                            goalTiles: v2.params.goalTiles,
                            heuristic: v2.params.heuristic
                        },
                        loop: v2.loop,
                        ms: v2.ms
                    };
                });
            });
        });
    };
};
var handleMouseMove = function (event) {
    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function (v) {
        var mouseEvent = Data_Maybe.fromJust()(Event_MouseEvent.fromEvent(event));
        return Control_Applicative.when(Control_Monad_State_Trans.applicativeStateT(Effect_Aff.monadAff))(Event_MouseEvent.buttons(mouseEvent) === 1)((function () {
            if (v.mode instanceof Moving) {
                return transformWorld(mouseEvent);
            };
            if (v.mode instanceof Drawing) {
                return changeMap(mouseEvent)(Data_Set.insert(AStar.ordTile));
            };
            if (v.mode instanceof Erasing) {
                return changeMap(mouseEvent)(Data_Set["delete"](AStar.ordTile));
            };
            throw new Error("Failed pattern match at Main (line 156, column 5 - line 159, column 49): " + [ v.mode.constructor.name ]);
        })());
    });
};
var astarParams = {
    goalTiles: Data_List_NonEmpty.singleton(new AStar.Tile(5, 5)),
    startTile: new AStar.Tile(0, 0),
    heuristic: AStar.manhattan,
    map: Data_Set.fromFoldable(Data_List_Types.foldableList)(AStar.ordTile)(new Data_List_Types.Cons(new AStar.Tile(3, 1), new Data_List_Types.Cons(new AStar.Tile(2, 1), new Data_List_Types.Cons(new AStar.Tile(1, 1), new Data_List_Types.Cons(new AStar.Tile(0, 1), new Data_List_Types.Cons(new AStar.Tile(-1 | 0, 1), Data_List_Types.Nil.value))))))
};
var handleReset = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff)))(function (v) {
    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Effect_Aff.functorAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(killProcess(v.drawProcess))))(function () {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(spawnDrawProcess({
            iteration: 0,
            world: v.drawProcess.input.world,
            params: astarParams,
            loop: v.drawProcess.input.loop,
            ms: v.drawProcess.input.ms
        }))))(function (v1) {
            return Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Effect_Aff.functorAff))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff))(function (v2) {
                var $78 = {};
                for (var $79 in v2) {
                    if ({}.hasOwnProperty.call(v2, $79)) {
                        $78[$79] = v2[$79];
                    };
                };
                $78.drawProcess = v1;
                return $78;
            }));
        });
    });
});
var reduce = function (emitted) {
    if (emitted instanceof UI.Play) {
        return handlePlay(emitted.value0)(emitted.value1);
    };
    if (emitted instanceof UI.Draw) {
        return Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Effect_Aff.functorAff))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff))(function (v) {
            var $85 = {};
            for (var $86 in v) {
                if ({}.hasOwnProperty.call(v, $86)) {
                    $85[$86] = v[$86];
                };
            };
            $85.mode = Drawing.value;
            return $85;
        }));
    };
    if (emitted instanceof UI.Erase) {
        return Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Effect_Aff.functorAff))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff))(function (v) {
            var $90 = {};
            for (var $91 in v) {
                if ({}.hasOwnProperty.call(v, $91)) {
                    $90[$91] = v[$91];
                };
            };
            $90.mode = Erasing.value;
            return $90;
        }));
    };
    if (emitted instanceof UI.Move) {
        return Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Effect_Aff.functorAff))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Effect_Aff.monadAff))(function (v) {
            var $95 = {};
            for (var $96 in v) {
                if ({}.hasOwnProperty.call(v, $96)) {
                    $95[$96] = v[$96];
                };
            };
            $95.mode = Moving.value;
            return $95;
        }));
    };
    if (emitted instanceof UI.Reset) {
        return handleReset;
    };
    if (emitted instanceof UI.MouseMove) {
        return handleMouseMove(emitted.value1);
    };
    throw new Error("Failed pattern match at Main (line 169, column 18 - line 175, column 45): " + [ emitted.constructor.name ]);
};
var main = (function () {
    var world = {
        m11: 1.0,
        m12: 0.0,
        m21: 0.0,
        m22: 1.0,
        m31: 0.0,
        m32: 0.0
    };
    var input = {
        params: astarParams,
        iteration: 0,
        world: world,
        loop: false,
        ms: 20.0
    };
    return function __do() {
        var v = spawnDrawProcess(input)();
        var initialAppState = {
            playing: false,
            mode: Drawing.value,
            drawProcess: v
        };
        return startUI(makeConsumer(Effect_Aff_Class.monadAffState(Effect_Aff_Class.monadAffAff))(reduce))(initialAppState)();
    };
})();
module.exports = {
    Drawing: Drawing,
    Erasing: Erasing,
    Moving: Moving,
    astarParams: astarParams,
    makeDrawProcess: makeDrawProcess,
    killProcess: killProcess,
    spawnDrawProcess: spawnDrawProcess,
    modifydrawProcess: modifydrawProcess,
    handlePlay: handlePlay,
    changeMap: changeMap,
    transformWorld: transformWorld,
    handleMouseMove: handleMouseMove,
    handleReset: handleReset,
    reduce: reduce,
    main: main,
    makeConsumer: makeConsumer,
    startUI: startUI
};
